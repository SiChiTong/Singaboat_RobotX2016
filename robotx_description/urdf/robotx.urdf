<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from robotx_standard.urdf.xacro     | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!-- Revolute-Revolute Manipulator -->
<robot name="robotx" xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- Constants for robot dimensions -->
  <!-- Import all Gazebo-customization elements, including Gazebo colors -->
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="gray">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="orange">
    <color rgba="1.0 0.423529411765 0.0392156862745 1.0"/>
  </material>
  <material name="brown">
    <color rgba="0.870588235294 0.811764705882 0.764705882353 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <!-- Constants for robot dimensions -->
  <!-- Import all Gazebo-customization elements, including Gazebo colors -->
  <!--xacro:include filename="materials.xacro" /-->
  <!-- macro for bouys -->
  <!-- support bars -->
  <!-- Base Link -->
  <link name="base_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="4.85 2.43 0.01"/>
      </geometry>
    </collision>
  </link>
  <!-- left bouy joint -->
  <joint name="left_bouy_joint" type="fixed">
    <parent link="base_link"/>
    <child link="left_bouy_link"/>
    <origin rpy="0 0 0" xyz="0 -1.015 0.2"/>
  </joint>
  <!-- left bouy Link -->
  <link name="left_bouy_link">
    <collision>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="4.85" radius="0.2"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 1.57079632679  0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="4.85" radius="0.2"/>
      </geometry>
      <material name="white"/>
    </visual>
    <inertial>
      <mass value="35"/>
      <inertia ixx="69.2731666667" ixy="0.0" ixz="0.0" iyy="69.2731666667" iyz="0.0" izz="0.665875"/>
    </inertial>
  </link>
  <!-- right bouy joint -->
  <joint name="right_bouy_joint" type="fixed">
    <parent link="base_link"/>
    <child link="right_bouy_link"/>
    <origin rpy="0 0 0" xyz="0 1.015 0.2"/>
  </joint>
  <!-- right bouy Link -->
  <link name="right_bouy_link">
    <collision>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="4.85" radius="0.2"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 1.57079632679  0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="4.85" radius="0.2"/>
      </geometry>
      <material name="white"/>
    </visual>
    <inertial>
      <mass value="35"/>
      <inertia ixx="69.2731666667" ixy="0.0" ixz="0.0" iyy="69.2731666667" iyz="0.0" izz="0.665875"/>
    </inertial>
  </link>
  <!-- platform joint-->
  <joint name="shelf_joint" type="fixed">
    <parent link="base_link"/>
    <child link="shelf_link"/>
    <origin rpy="0 0 0" xyz="0 0 1.28"/>
  </joint>
  <!-- platform -->
  <link name="shelf_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="1.85 1.01 0.1"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="1.85 1.01 0.1"/>
      </geometry>
      <material name="yellow"/>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="84"/>
      <inertia ixx="24.0275" ixy="0.0" ixz="0.0" iyy="31.0982" iyz="0.0" izz="7.2107"/>
    </inertial>
  </link>
  <!-- bars -->
  <joint name="front_left_bar_joint" type="fixed">
    <parent link="shelf_link"/>
    <child link="front_left_bar_link"/>
    <origin rpy="0 0 0" xyz="0 0 -0.64"/>
  </joint>
  <link name="front_left_bar_link">
    <collision>
      <origin rpy="-0.392699081699 0 0" xyz="0.925 -0.505 0"/>
      <geometry>
        <cylinder length="1.28" radius="0.01"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="-0.392699081699 0 0" xyz="0.925 -0.505 0"/>
      <geometry>
        <cylinder length="1.28" radius="0.01"/>
      </geometry>
    </visual>
  </link>
  <joint name="front_right_bar_joint" type="fixed">
    <parent link="shelf_link"/>
    <child link="front_right_bar_link"/>
    <origin rpy="0 0 0" xyz="0 0 -0.64"/>
  </joint>
  <link name="front_right_bar_link">
    <collision>
      <origin rpy="0.392699081699 0 0" xyz="0.925 0.505 0"/>
      <geometry>
        <cylinder length="1.28" radius="0.01"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0.392699081699 0 0" xyz="0.925 0.505 0"/>
      <geometry>
        <cylinder length="1.28" radius="0.01"/>
      </geometry>
    </visual>
  </link>
  <joint name="rear_left_bar_joint" type="fixed">
    <parent link="shelf_link"/>
    <child link="rear_left_bar_link"/>
    <origin rpy="0 0 0" xyz="0 0 -0.64"/>
  </joint>
  <link name="rear_left_bar_link">
    <collision>
      <origin rpy="-0.392699081699 0 0" xyz="-0.925 -0.505 0"/>
      <geometry>
        <cylinder length="1.28" radius="0.01"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="-0.392699081699 0 0" xyz="-0.925 -0.505 0"/>
      <geometry>
        <cylinder length="1.28" radius="0.01"/>
      </geometry>
    </visual>
  </link>
  <joint name="rear_right_bar_joint" type="fixed">
    <parent link="shelf_link"/>
    <child link="rear_right_bar_link"/>
    <origin rpy="0 0 0" xyz="0 0 -0.64"/>
  </joint>
  <link name="rear_right_bar_link">
    <collision>
      <origin rpy="0.392699081699 0 0" xyz="-0.925 0.505 0"/>
      <geometry>
        <cylinder length="1.28" radius="0.01"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0.392699081699 0 0" xyz="-0.925 0.505 0"/>
      <geometry>
        <cylinder length="1.28" radius="0.01"/>
      </geometry>
    </visual>
  </link>
  <!-- sensor box joint-->
  <joint name="sensor_box_joint" type="fixed">
    <parent link="shelf_link"/>
    <child link="sensor_box_link"/>
    <origin rpy="0 0 0" xyz="0.5 0 0.15"/>
  </joint>
  <!-- sensor box -->
  <link name="sensor_box_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.2 0.4 0.2"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.2 0.4 0.2"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.5"/>
      <inertia ixx="0.00333333333333" ixy="0.0" ixz="0.0" iyy="0.00833333333333" iyz="0.0" izz="0.00833333333333"/>
    </inertial>
  </link>
  <gazebo>
    <plugin filename="libgazebo_ros_planar_move.so" name="object_controller">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom/gazebo</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometryRate>20.0</odometryRate>
      <robotBaseFrame>base_link</robotBaseFrame>
    </plugin>
  </gazebo>
  <!-- base_link -->
  <gazebo reference="base_link">
    <material>Gazebo/Green</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <gazebo reference="left_bouy_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="right_bouy_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="shelf_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <!-- sensor box -->
  <gazebo reference="sensor_box_link">
    <material>Gazebo/Yellow</material>
  </gazebo>
  <!-- camera array joint -->
  <!-- Set up camera linkage and configuration -->
  <joint name="gps_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.6"/>
    <parent link="shelf_link"/>
    <child link="gps_link"/>
  </joint>
  <link name="gps_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.08" radius="0.1"/>
      </geometry>
      <material name="white"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.08" radius="0.1"/>
      </geometry>
    </collision>
  </link>
  <joint name="imu_array_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="shelf_link"/>
    <child link="imu_array_link"/>
  </joint>
  <link name="imu_array_link"/>
  <joint name="middle_middle_imu_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.05"/>
    <parent link="imu_array_link"/>
    <child link="middle_middle_imu_link"/>
  </joint>
  <link name="middle_middle_imu_link"/>
  <!--xacro:imu position1="front" position2="left" x="${shelf_length/2}" y="-${shelf_width/2}" />
    <xacro:imu position1="front" position2="right" x="${shelf_length/2}" y="-${shelf_width/2}" />
    <xacro:imu position1="rear" position2="left" x="${shelf_length/2}" y="-${shelf_width/2}" />
    <xacro:imu position1="rear" position2="right" x="${shelf_length/2}" y="-${shelf_width/2}" /-->
  <joint name="bow_camera_array_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="shelf_link"/>
    <child link="bow_stereo/camera_link"/>
  </joint>
  <link name="bow_stereo/camera_link"/>
  <joint name="port_camera_array_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="shelf_link"/>
    <child link="port_stereo/camera_link"/>
  </joint>
  <link name="port_stereo/camera_link"/>
  <joint name="starboard_camera_array_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="shelf_link"/>
    <child link="starboard_stereo/camera_link"/>
  </joint>
  <link name="starboard_stereo/camera_link"/>
  <joint name="bow_left_camera_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.925 -0.505 0.55"/>
    <parent link="bow_stereo/camera_link"/>
    <child link="bow_stereo/left/camera_link"/>
  </joint>
  <link name="bow_stereo/left/camera_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hector_sensors_description/meshes/thermaleye_camera/thermaleye_camera_hector_v2.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hector_sensors_description/meshes/thermaleye_camera/thermaleye_camera_hector_v2.stl"/>
      </geometry>
    </collision>
  </link>
  <joint name="bow_right_camera_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.925 0.505 0.55"/>
    <parent link="bow_stereo/camera_link"/>
    <child link="bow_stereo/right/camera_link"/>
  </joint>
  <link name="bow_stereo/right/camera_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hector_sensors_description/meshes/thermaleye_camera/thermaleye_camera_hector_v2.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hector_sensors_description/meshes/thermaleye_camera/thermaleye_camera_hector_v2.stl"/>
      </geometry>
    </collision>
  </link>
  <joint name="port_left_camera_joint" type="fixed">
    <origin rpy="0 0 -1.57079632679" xyz="-0.925 -0.505 0.15"/>
    <parent link="port_stereo/camera_link"/>
    <child link="port_stereo/left/camera_link"/>
  </joint>
  <link name="port_stereo/left/camera_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hector_sensors_description/meshes/thermaleye_camera/thermaleye_camera_hector_v2.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hector_sensors_description/meshes/thermaleye_camera/thermaleye_camera_hector_v2.stl"/>
      </geometry>
    </collision>
  </link>
  <joint name="port_right_camera_joint" type="fixed">
    <origin rpy="0 0 -1.57079632679" xyz="0.925 -0.505 0.15"/>
    <parent link="port_stereo/camera_link"/>
    <child link="port_stereo/right/camera_link"/>
  </joint>
  <link name="port_stereo/right/camera_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hector_sensors_description/meshes/thermaleye_camera/thermaleye_camera_hector_v2.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hector_sensors_description/meshes/thermaleye_camera/thermaleye_camera_hector_v2.stl"/>
      </geometry>
    </collision>
  </link>
  <joint name="starboard_left_camera_joint" type="fixed">
    <origin rpy="0 0 1.57079632679" xyz="0.925 0.505 0.15"/>
    <parent link="starboard_stereo/camera_link"/>
    <child link="starboard_stereo/left/camera_link"/>
  </joint>
  <link name="starboard_stereo/left/camera_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hector_sensors_description/meshes/thermaleye_camera/thermaleye_camera_hector_v2.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hector_sensors_description/meshes/thermaleye_camera/thermaleye_camera_hector_v2.stl"/>
      </geometry>
    </collision>
  </link>
  <joint name="starboard_right_camera_joint" type="fixed">
    <origin rpy="0 0 1.57079632679" xyz="-0.925 0.505 0.15"/>
    <parent link="starboard_stereo/camera_link"/>
    <child link="starboard_stereo/right/camera_link"/>
  </joint>
  <link name="starboard_stereo/right/camera_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hector_sensors_description/meshes/thermaleye_camera/thermaleye_camera_hector_v2.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hector_sensors_description/meshes/thermaleye_camera/thermaleye_camera_hector_v2.stl"/>
      </geometry>
    </collision>
  </link>
  <!--kinect camera >
    <joint name="kinect_camera_joint" type="fixed">
        <origin xyz="0 0 0.35" rpy="0 0 0" />
        <parent link="base_link"/>
        <child link="kinect_camera_link"/>
    </joint>

    <xacro:if value="$(arg kinect_enabled)" >
        <link name="kinect_camera_link">
            <inertial>
                <mass value="0.01" />
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <inertia ixx="2.632e-4" ixy="0" ixz="0" iyy="2.632e-4" iyz="0" izz="1.62e-4" />
            </inertial>
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <mesh filename="package://hector_sensors_description/meshes/kinect_camera/kinect_camera_simple.dae"/>
                </geometry>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <mesh filename="package://hector_sensors_description/meshes/kinect_camera/kinect_camera_simple.stl"/>
                </geometry>
            </collision>
        </link>

        <joint name="kinect_camera_depth_joint" type="fixed">
            <origin xyz="0.0 -0.01 0.0" rpy="0 0 0" />
            <parent link="kinect_camera_link" />
            <child link="kinect_camera_depth_frame"/>
        </joint>

        <link name="kinect_camera_depth_frame"/>

        <joint name="kinect_camera_depth_optical_joint" type="fixed">
            <origin xyz="0 0 0" rpy="${-M_PI/2} 0.0 ${-M_PI/2}" />
            <parent link="kinect_camera_depth_frame" />
            <child link="kinect_camera_depth_optical_frame"/>
        </joint>

        <link name="kinect_camera_depth_optical_frame"/>

        <joint name="kinect_camera_rgb_joint" type="fixed">
            <origin xyz="0.0 -0.0125 0.0" rpy="0 0 0" />
            <parent link="kinect_camera_link" />
            <child link="kinect_camera_rgb_frame"/>
        </joint>

        <link name="kinect_camera_rgb_frame"/>

        <joint name="kinect_camera_rgb_optical_joint" type="fixed">
            <origin xyz="0 0 0" rpy="${-M_PI/2} 0.0 ${-M_PI/2}" />
            <parent link="kinect_camera_rgb_frame" />
            <child link="kinect_camera_rgb_optical_frame"/>
        </joint>

        <link name="kinect_camera_rgb_optical_frame"/>
    </xacro:if -->
  <!-- Set up sonar linkage and configuration >
    <xacro:if value="$(arg sonar_enabled)" >
        <joint name="base_link_sonar_link_joint" type="fixed">
            <origin xyz="0 0 -0.05" rpy="0 ${M_PI/2} 0" />
            <parent link="base_link"/>
            <child link="sonar_link" />
        </joint>

        <link name="sonar_link">
            <inertial>
                <mass value="1"/>
                <origin xyz="0 0 0"/>
                <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1"/>
            </inertial>
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <mesh filename="package://hector_sensors_description/meshes/sonar_sensor/max_sonar_ez4.dae"/>
                </geometry>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <box size="0.02 0.02 0.02" />
                </geometry>
            </collision>
        </link>
    </xacro:if -->
  <!-- Hokuyo Laser >
    <xacro:if value="$(arg lidar_enabled)">
        <joint name="hokuyo_joint" type="fixed">
            <origin xyz="0.2 0.0 0.2" rpy="0 0 0"/>
            <parent link="base_link"/>
            <child link="hokuyo_link"/>
        </joint>

        <link name="hokuyo_link">
            <collision>
                <origin xyz="0 0 -0.0115" rpy="0 0 0"/>
                <geometry>
                    <box size="0.058 0.058 0.087"/>
                </geometry>
            </collision>

            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <mesh filename="package://hector_sensors_description/meshes/hokuyo_utm30lx/hokuyo_utm_30lx.dae"/>
                </geometry>
            </visual>

            <inertial>
                <mass value="0.27" />
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <inertia ixx="2.632e-4" ixy="0" ixz="0" iyy="2.632e-4" iyz="0" izz="1.62e-4" />
            </inertial>
        </link>
    </xacro:if-->
  <!-- Set up imu configuration -->
  <!-- Set up camera configuration -->
  <gazebo>
    <plugin filename="libhector_gazebo_ros_imu.so" name="imu">
      <robotNamespace>middle_middle_imu</robotNamespace>
      <updateRate>20.0</updateRate>
      <frameId>middle_middle_imu_link</frameId>
      <bodyName>shelf_link</bodyName>
      <topicName>imu/data</topicName>
      <serviceName>imu</serviceName>
      <xyzOffset>0 0 0</xyzOffset>
      <rpyOffset>0 0 0</rpyOffset>
      <gaussianNoise>0</gaussianNoise>
      <accelDrift>0.5 0.5 0.5</accelDrift>
      <accelGaussianNoise>0.35 0.35 0.3</accelGaussianNoise>
      <rateDrift>0.1 0.1 0.1</rateDrift>
      <rateGaussianNoise>0.05 0.05 0.015</rateGaussianNoise>
      <headingDrift>0.1</headingDrift>
      <headingGaussianNoise>0.05</headingGaussianNoise>
    </plugin>
  </gazebo>
  <!--xacro:imu_gazebo position1="front" position2="right" />
    <xacro:imu_gazebo position1="rear" position2="left" />
    <xacro:imu_gazebo position1="rear" position2="right" /-->
  <gazebo reference="bow_stereo/left/camera_link">
    <sensor name="bow_left_camera" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="stereo_camera">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <robotNamespace>bow_stereo/left</robotNamespace>
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>/</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="bow_stereo/right/camera_link">
    <sensor name="bow_right_camera" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="stereo_camera">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <robotNamespace>bow_stereo/right</robotNamespace>
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>/</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="port_stereo/left/camera_link">
    <sensor name="port_left_camera" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="stereo_camera">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <robotNamespace>port_stereo/left</robotNamespace>
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>/</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="port_stereo/right/camera_link">
    <sensor name="port_right_camera" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="stereo_camera">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <robotNamespace>port_stereo/right</robotNamespace>
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>/</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="starboard_stereo/left/camera_link">
    <sensor name="starboard_left_camera" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="stereo_camera">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <robotNamespace>starboard_stereo/left</robotNamespace>
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>/</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="starboard_stereo/right/camera_link">
    <sensor name="starboard_right_camera" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="stereo_camera">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <robotNamespace>starboard_stereo/right</robotNamespace>
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>/</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Set up gps configuration -->
  <gazebo>
    <plugin filename="libhector_gazebo_ros_gps.so" name="gps">
      <alwaysOn>true</alwaysOn>
      <updateRate>10.0</updateRate>
      <frameId>gps_link</frameId>
      <bodyName>shelf_link</bodyName>
      <topicName>navsat/fix</topicName>
      <velocityTopicName>navsat/vel</velocityTopicName>
      <!--referenceLatitude>49.9</referenceLatitude>
            <referenceLongitude>8.9</referenceLongitude-->
      <referenceLatitude>1.35012856</referenceLatitude>
      <referenceLongitude>103.687695</referenceLongitude>
      <referenceHeading>0</referenceHeading>
      <referenceAltitude>0</referenceAltitude>
      <drift>5.0 5.0 5.0</drift>
      <gaussianNoise>0.1 0.1 0.1</gaussianNoise>
      <velocityDrift>0 0 0</velocityDrift>
      <velocityGaussianNoise>0.1 0.1 0.1</velocityGaussianNoise>
    </plugin>
  </gazebo>
  <!-- Set up kinect configuration >
    <xacro:if value="$(arg kinect_enabled)">
        <gazebo reference="kinect_camera_depth_frame">
            <sensor type="depth" name="kinect_camera">
                <update_rate>20</update_rate>
                <camera>
                    <horizontal_fov>${60 * M_PI/180.0}</horizontal_fov>
                    <image>
                        <format>R8G8B8</format>
                        <width>640</width>
                        <height>480</height>
                    </image>
                    <clip>
                        <near>0.05</near>
                        <far>3</far>
                    </clip>
                </camera>
                <plugin name="kinect_camera_controller" filename="libgazebo_ros_openni_kinect.so">
                <cameraName>kinect_camera</cameraName>
                <imageTopicName>rgb/image_raw</imageTopicName>
                <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
                <depthImageTopicName>depth/image_raw</depthImageTopicName>
                <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
                <pointCloudTopicName>depth/points</pointCloudTopicName>
                <pointCloudCutoff>0.05</pointCloudCutoff>
                <pointCloudCutoffMax>5</pointCloudCutoffMax>
                <frameName>kinect_camera_depth_optical_frame</frameName>
            </plugin>
        </sensor>
    </gazebo>
</xacro:if-->
  <!-- Set up sonar configuration >
    <xacro:if value="$(arg sonar_enabled)">
        <gazebo reference="sonar_link">
            <sensor type="ray" name="sonar_sensor">
                <pose>0 0 0 0 0 0</pose>
                <visualize>true</visualize>
                <update_rate>20</update_rate>
                <ray>
                    <scan>
                        <horizontal>
                            <samples>3</samples>
                            <resolution>1</resolution>
                            <min_angle>${-5*M_PI/180}</min_angle>
                            <max_angle>${5*M_PI/180}</max_angle>
                        </horizontal>
                    </scan>
                    <range>
                        <min>0.10</min>
                        <max>30.0</max>
                        <resolution>0.01</resolution>
                    </range>
                    <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>

            <plugin name="sonar_controller" filename="libhector_gazebo_ros_sonar.so">
            <gaussianNoise>0.005</gaussianNoise>
            <bodyName>base_link</bodyName>
            <topicName>sonar/data</topicName>
            <frameId>sonar_link</frameId>
            <offset>0</offset>
            <drift>0</drift>
            <driftFrequency>0</driftFrequency>
        </plugin>
    </sensor>
</gazebo>
</xacro:if-->
  <!-- Set up hokuyo configuration >
    <xacro:if value="$(arg lidar_enabled)">
        <gazebo reference="hokuyo_link">
            <sensor type="ray" name="head_hokuyo_sensor">
                <pose>0 0 0 0 0 0</pose>
                <always_on>true</always_on>
                <visualize>true</visualize>
                <update_rate>20</update_rate>
                <ray>
                    <scan>
                        <horizontal>
                            <samples>720</samples>
                            <resolution>1</resolution>
                            <min_angle>${-M_PI/2}</min_angle>
                            <max_angle>${M_PI/2}</max_angle>
                        </horizontal>
                    </scan>
                    <range>
                        <min>0.08</min>
                        <max>20</max>
                        <resolution>0.004</resolution>
                    </range>
                    <noise>
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.01</stddev>
                    </noise>
                </ray>

                <plugin name="gazebo_ros_hokuyo_utm30lx_model_controller" filename="libgazebo_ros_laser.so">
                <bodyName>base_link</bodyName>
                <topicName>laser/scan</topicName>
                <frameName>hokuyo_link</frameName>
            </plugin>
        </sensor>
    </gazebo>
</xacro:if-->
</robot>
